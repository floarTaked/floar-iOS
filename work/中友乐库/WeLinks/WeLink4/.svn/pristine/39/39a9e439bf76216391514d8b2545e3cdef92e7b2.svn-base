//
//  SaveCardViewController.m
//  WeLinked4
//
//  Created by jonas on 5/16/14.
//  Copyright (c) 2014 jonas. All rights reserved.
//

#import "SaveCardViewController.h"
#import "Common.h"
#import <AssetsLibrary/AssetsLibrary.h>
#import "ImageEditorViewController.h"
@interface SaveCardViewController ()
{
    UIImagePickerController* imagePicker;
}
@property(nonatomic,strong) ImageEditorViewController *imageEditor;
@property(nonatomic,strong) ALAssetsLibrary *library;
@end

@implementation SaveCardViewController
@synthesize cardCheckImage,cardInfo;
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    [self.navigationItem setLeftBarButtonItem:[UIImage imageNamed:@"back"]
                                 imageSelected:[UIImage imageNamed:@"backSelected"]
                                         title:nil
                                         inset:UIEdgeInsetsMake(0, -30, 0, 0)
                                        target:self
                                      selector:@selector(back:)];
    [self.navigationItem setRightBarButtonItem:nil
                                 imageSelected:nil
                                         title:@"保存"
                                         inset:UIEdgeInsetsMake(0, -30, 0, 0)
                                        target:self
                                      selector:@selector(save:)];
    [self.navigationItem setTitleString:@"编辑个人资料"];
    imagePicker = [[UIImagePickerController alloc]init];
    imagePicker.delegate = self;
    imagePicker.wantsFullScreenLayout = NO;
    cardView.userInteractionEnabled = YES;
    cardView.multipleTouchEnabled  = YES;
    cardView.clipsToBounds = YES;
    cardImage.userInteractionEnabled = YES;
    // 缩放手势
    UIPinchGestureRecognizer *pinchGestureRecognizer = [[UIPinchGestureRecognizer alloc] initWithTarget:self
                                                                                                 action:@selector(pinchImage:)];
    [cardImage addGestureRecognizer:pinchGestureRecognizer];
    
    // 移动手势
    UIPanGestureRecognizer *panGestureRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self
                                                                                           action:@selector(panImage:)];
    [cardImage addGestureRecognizer:panGestureRecognizer];
    cardImage.image = cardCheckImage;
    
    UITapGestureRecognizer* tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(endEdit:)];
    tap.numberOfTapsRequired = 1;
    tap.delegate = self;
    [mainView addGestureRecognizer:tap];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWasShown:) name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillBeHidden:) name:UIKeyboardWillHideNotification object:nil];
}
-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
}

- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch
{
    if ([NSStringFromClass([touch.view class]) isEqualToString:@"UITableViewCellContentView"])
    {
        [self.view endEditing:YES];
        return NO;
    }
    return  YES;
}
-(void)endEdit:(UITapGestureRecognizer*)gues
{
    [self.view endEditing:YES];
}
-(void)save:(id)sender
{
    
}
-(void)back:(id)sender
{
    [self dismissViewControllerAnimated:YES completion:nil];
}
-(void)setEventCallBack:(EventCallBack)call
{
    callback = call;
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
// 处理缩放手势
- (void) pinchImage:(UIPinchGestureRecognizer *)pinchGestureRecognizer
{
    UIView *view = pinchGestureRecognizer.view;
    if (pinchGestureRecognizer.state == UIGestureRecognizerStateBegan || pinchGestureRecognizer.state == UIGestureRecognizerStateChanged)
    {
        view.transform = CGAffineTransformScale(view.transform, pinchGestureRecognizer.scale, pinchGestureRecognizer.scale);
        pinchGestureRecognizer.scale = 1;
    }
}

// 处理拖拉手势
- (void) panImage:(UIPanGestureRecognizer *)panGestureRecognizer
{
    UIView *view = panGestureRecognizer.view;
    if (panGestureRecognizer.state == UIGestureRecognizerStateBegan || panGestureRecognizer.state == UIGestureRecognizerStateChanged)
    {
        
        CGPoint translation = [panGestureRecognizer translationInView:view.superview];
        [view setCenter:(CGPoint){view.center.x + translation.x, view.center.y + translation.y}];
        [panGestureRecognizer setTranslation:CGPointZero inView:view.superview];
    }
}
#pragma --mark 选择头像
-(void)setAvatar:(UIImage*)image
{
    headImageView.image = image;
    newHeadImage = image;
}
- (void)showCamera
{
    [self initEditController];
    [imagePicker setSourceType:UIImagePickerControllerSourceTypeCamera];
    [imagePicker setCameraDevice:UIImagePickerControllerCameraDeviceFront];
    [imagePicker setCameraFlashMode:UIImagePickerControllerCameraFlashModeAuto];
    imagePicker.showsCameraControls = YES;
    [self presentViewController:imagePicker animated:YES completion:nil];
}

- (void)showPhotoLibrary
{
    [self initEditController];
    [imagePicker setSourceType:UIImagePickerControllerSourceTypePhotoLibrary];
    [self presentViewController:imagePicker animated:YES completion:nil];
}
#pragma mark UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    switch (buttonIndex)
    {
        case 0:
            [self showCamera];
            break;
        case 1:
            [self showPhotoLibrary];
            break;
        case 2:
            break;
        default:
            break;
    }
}
-(void)takePhoto:(id)sender
{
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
    {
        UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:nil
                                                                 delegate:self
                                                        cancelButtonTitle:@"取消"
                                                   destructiveButtonTitle:nil
                                                        otherButtonTitles:@"拍照",@"相册",nil];
        [actionSheet showInView:self.view];
    }
    else
    {
        [self showPhotoLibrary];
    }
}
-(void)initEditController
{
    self.library = [[ALAssetsLibrary alloc] init];
    self.imageEditor = [[ImageEditorViewController alloc] initWithNibName:@"ImageEditorViewController" bundle:nil];
    __weak UIImagePickerController* piker =  imagePicker;
    __weak typeof(self) weakSelf = self;
    self.imageEditor.doneCallback = ^(int event,id object)
    {
        if(event == 1)
        {
            if(object != nil)
            {
                [weakSelf setAvatar:object];
            }
        }
        else
        {
            [piker popViewControllerAnimated:YES];
        }
    };
}
#pragma --mark UIImagePickerControllerDelegate
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo
{
    [picker dismissViewControllerAnimated:NO completion:nil];
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *image =  [info objectForKey:UIImagePickerControllerOriginalImage];
    NSURL *assetURL = [info objectForKey:UIImagePickerControllerReferenceURL];
    
    [self.library assetForURL:assetURL resultBlock:^(ALAsset *asset) {
        UIImage *preview = [UIImage imageWithCGImage:[asset aspectRatioThumbnail]];
        
        self.imageEditor.sourceImage = image;
        self.imageEditor.previewImage = preview;
        [self.imageEditor reset:NO];
        
        [picker dismissViewControllerAnimated:NO completion:nil];
        self.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:self.imageEditor animated:YES];
        self.hidesBottomBarWhenPushed = NO;
    } failureBlock:^(NSError *error) {
        NSLog(@"Failed to get asset from library");
    }];
}
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:NO completion:nil];
}
#pragma --mark TableView
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if(section == 0)
    {
        return 5;
    }
    else if (section == 1)
    {
        return 6 + [cardInfo.phoneArray count] + [cardInfo.emailArray count];
    }
    return 0;
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(indexPath.row == 0)
    {
        return 30;
    }
    else
    {
        if (indexPath.section == 0)
        {
            if(indexPath.row == 1)
            {
                return 70;
            }
        }
    }
    return 45;
}
- (UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0)
    {
        static NSString* Identifier = @"HeaderCell";
        UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
        if(cell == nil)
        {
            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:Identifier];
            cell.accessoryType = UITableViewCellAccessoryNone;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            UIView* cellBackgroundView = [[UIView alloc] initWithFrame:CGRectZero];
            cellBackgroundView.backgroundColor = colorWithHex(0xF1F1F1);
            cell.backgroundView = cellBackgroundView;
            cell.backgroundColor = [UIColor clearColor];
        }
        cell.textLabel.text = @"";
        cell.imageView.image = nil;
        cell.detailTextLabel.text = @"";
        if(indexPath.row == 0)
        {
            if(indexPath.section == 0)
            {
                cell.imageView.image = [UIImage imageNamed:@"basicInfo"];
            }
            else if(indexPath.section == 1)
            {
                cell.imageView.image = [UIImage imageNamed:@"detailInfo"];
            }
        }
        return cell;
    }
    else
    {
        if(indexPath.section == 0 && indexPath.row == 1)
        {
            static NSString* Identifier = @"ImageCell";
            UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
            if(cell == nil)
            {
                cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:Identifier];
                cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                
                UIView* cellBackgroundView = [[UIView alloc] initWithFrame:CGRectZero];
                cellBackgroundView.backgroundColor = [UIColor whiteColor];
                cell.backgroundView = cellBackgroundView;
                
                
                cell.backgroundColor = [UIColor whiteColor];
                cell.textLabel.font = getFontWith(NO, 13);
                cell.textLabel.textColor = [UIColor blackColor];
                cell.detailTextLabel.font = getFontWith(NO, 12);
                cell.detailTextLabel.textColor = colorWithHex(0x3287E6);
            }
            cell.textLabel.text = @"形象照";
            cell.imageView.image = nil;
            cell.detailTextLabel.text = @"";
            headImageView = (EGOImageView*)[cell.contentView viewWithTag:10];
            if(headImageView == nil)
            {
                headImageView = [[EGOImageView alloc]initWithFrame:CGRectMake(70, 10, 50, 50)];
                headImageView.layer.cornerRadius = 25;
                headImageView.layer.masksToBounds = YES;
                headImageView.layer.borderWidth = 0.5;
                headImageView.layer.borderColor = [[UIColor lightGrayColor] CGColor];
                headImageView.placeholderImage = [UIImage imageNamed:@"defaultHead"];
                headImageView.image = [UIImage imageNamed:@"defaultHead"];
                headImageView.tag = 10;
                [cell.contentView addSubview:headImageView];
            }
            return cell;
        }
        else
        {
            UITableViewCell* cell = nil;
            if(indexPath.section == 0)
            {
                cell = [self customCell1:tableView indexPath:indexPath];
            }
            else if (indexPath.section == 1)
            {
                if (indexPath.row == [cardInfo.phoneArray count]+1 ||
                    indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 2)
                {
                    cell = [self customCell2:tableView indexPath:indexPath];
                }
                else
                {
                    cell = [self customCell1:tableView indexPath:indexPath];
                }
            }
            return cell;
        }
    }
}
-(UITableViewCell*)customCell1:(UITableView*)tableView indexPath:(NSIndexPath *)indexPath
{
    static NSString* Identifier = @"Cell1";
    UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
    if(cell == nil)
    {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue2 reuseIdentifier:Identifier];
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        
        UIView* cellBackgroundView = [[UIView alloc] initWithFrame:CGRectZero];
        cellBackgroundView.backgroundColor = [UIColor whiteColor];
        cell.backgroundView = cellBackgroundView;
        
        
        cell.backgroundColor = [UIColor whiteColor];
        cell.textLabel.font = getFontWith(NO, 14);
        cell.textLabel.textColor = [UIColor blackColor];
        cell.textLabel.textAlignment = NSTextAlignmentLeft;
        cell.detailTextLabel.font = getFontWith(NO, 12);
        cell.detailTextLabel.textColor = colorWithHex(0x3287E6);
        cell.detailTextLabel.textAlignment = NSTextAlignmentLeft;
    }
    cell.textLabel.text = @"";
    cell.imageView.image = nil;
    cell.detailTextLabel.text = @"";
    
    if(indexPath.section == 0)
    {
        if(indexPath.row == 2)
        {
            cell.textLabel.text = @"姓名";
            nameFiled = [self customTextFiled:cell placeholder:@""];
            [nameFiled setText:cardInfo.name];
        }
        else if(indexPath.row == 3)
        {
            cell.textLabel.text = @"公司";
            compFiled = [self customTextFiled:cell placeholder:@""];
            [compFiled setText:cardInfo.company];
        }
        else if(indexPath.row == 4)
        {
            cell.textLabel.text = @"职位";
            jobFiled = [self customTextFiled:cell placeholder:@""];
            [jobFiled setText:cardInfo.job];
        }
    }
    else if(indexPath.row <= [cardInfo.phoneArray count])
    {
        cell.textLabel.text = @"手机";
        UITextField* phone = [self customTextFiled:cell placeholder:@""];
        [phoneFiledArray addObject:phone];
        [phone setText:[cardInfo.phoneArray objectAtIndex:indexPath.row-1]];
    }
    else if (indexPath.row >[cardInfo.phoneArray count]+1 &&
             indexPath.row < [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 2)
    {
        cell.textLabel.text = @"邮件";
        UITextField* email = [self customTextFiled:cell placeholder:@""];
        [emailFiledArray addObject:email];
        [email setText:[cardInfo.emailArray objectAtIndex:indexPath.row- [cardInfo.phoneArray count]-2]];
    }
    else if (indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 3)
    {
        cell.textLabel.text = @"公司地址";
        addressFiled = [self customTextFiled:cell placeholder:@""];
        [addressFiled setText:cardInfo.companyAddress];
    }
    else if (indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 4)
    {
        cell.textLabel.text = @"通讯帐号";
        IMFiled = [self customTextFiled:cell placeholder:@""];
        [IMFiled setText:cardInfo.account];
    }
    else if (indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 5)
    {
        cell.textLabel.text = @"名片位置";
        posFiled = [self customTextFiled:cell placeholder:@""];
        [posFiled setText:cardInfo.cardPosition];
    }
    return cell;
}
-(UITableViewCell*)customCell2:(UITableView*)tableView indexPath:(NSIndexPath *)indexPath
{
    static NSString* Identifier = @"Cell2";
    UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
    if(cell == nil)
    {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue2 reuseIdentifier:Identifier];
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        
        UIView* cellBackgroundView = [[UIView alloc] initWithFrame:CGRectZero];
        cellBackgroundView.backgroundColor = [UIColor whiteColor];
        cell.backgroundView = cellBackgroundView;
        
        
        cell.backgroundColor = [UIColor whiteColor];
        cell.textLabel.font = getFontWith(NO, 14);
        cell.textLabel.textColor = [UIColor blackColor];
        cell.textLabel.textAlignment = NSTextAlignmentLeft;
        cell.detailTextLabel.font = getFontWith(NO, 12);
        cell.detailTextLabel.textColor = colorWithHex(0x3287E6);
        cell.detailTextLabel.textAlignment = NSTextAlignmentLeft;
    }
    cell.textLabel.text = @"";
    cell.imageView.image = nil;
    cell.detailTextLabel.text = @"";
    if (indexPath.row == [cardInfo.phoneArray count]+1)
    {
        cell.textLabel.text = @"添加手机";
    }
    else if (indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 2)
    {
        cell.textLabel.text = @"添加邮件";
    }
    return cell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if(indexPath.section == 0 && indexPath.row == 1)
    {
        [self takePhoto:nil];
    }
    else if (indexPath.section == 1 && indexPath.row == [cardInfo.phoneArray count]+1)
    {
        //添加手机
        [cardInfo.phoneArray addObject:@""];
        [table reloadData];
    }
    else if (indexPath.row == [cardInfo.phoneArray count]+ [cardInfo.emailArray count] + 2)
    {
        //添加邮箱
        [cardInfo.emailArray addObject:@""];
        [table reloadData];
    }
}
-(UITextField*)customTextFiled:(UITableViewCell*)cell placeholder:(NSString*)placeholder
{
    if(cell == nil || cell.contentView == nil)
    {
        nil;
    }
    UITextField* textField = (UITextField*)[cell.contentView viewWithTag:200];
    [textField setText:@""];
    if(textField == nil)
    {
        textField = [[UITextField alloc]initWithFrame:CGRectMake(80, 0, cell.frame.size.width-100, 45)];
        textField.tag = 200;
        [cell.contentView addSubview:textField];
        textField.backgroundColor = [UIColor clearColor];
        textField.textColor = colorWithHex(0x3287E6);
        textField.textAlignment = NSTextAlignmentLeft;
        textField.font = getFontWith(NO, 13);
        textField.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
        if ([textField respondsToSelector:@selector(setAttributedPlaceholder:)])
        {
            textField.attributedPlaceholder = [[NSAttributedString alloc]
                                               initWithString:placeholder
                                               attributes:@{NSForegroundColorAttributeName:[UIColor lightGrayColor]}];
        }
    }
    return textField;
}
#pragma mark - Keyboard events

- (void)keyboardWasShown:(NSNotification*)aNotification
{
    NSDictionary* info = [aNotification userInfo];
    CGSize kbSize = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size;
    NSNumber *duration = [info objectForKey:UIKeyboardAnimationDurationUserInfoKey];
    NSNumber *curve = [info objectForKey:UIKeyboardAnimationCurveUserInfoKey];
    
    CGRect frame = table.frame;
    frame.size.height = self.view.frame.size.height - kbSize.height;
    
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationCurve:[curve intValue]];
    [UIView animateWithDuration:duration.doubleValue animations:^{
        mainView.frame = CGRectMake(0, -205, self.view.frame.size.width, self.view.frame.size.height);
        table.frame = frame;
    } completion:^(BOOL finished) {
    }];
}

- (void)keyboardWillBeHidden:(NSNotification*)aNotification
{
    NSDictionary* info = [aNotification userInfo];
    NSNumber *duration = [info objectForKey:UIKeyboardAnimationDurationUserInfoKey];
    NSNumber *curve = [info objectForKey:UIKeyboardAnimationCurveUserInfoKey];
    CGRect frame = table.frame;
    frame.size.height = self.view.frame.size.height - 205;
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationCurve:[curve intValue]];
    [UIView animateWithDuration:duration.doubleValue animations:^{
        mainView.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);
        table.frame = frame;
    } completion:^(BOOL finished) {
    }];
}
@end
