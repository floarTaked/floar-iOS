//
//  ContactsViewController.m
//  WeLinked3
//
//  Created by jonas on 2/26/14.
//  Copyright (c) 2014 WeLinked. All rights reserved.
//

#import "ContactsViewController.h"
#import "ChineseToPinyin.h"
#import "NetworkEngine.h"
#import "LogicManager.h"
#import "UserInfo.h"
#import "RCLabel.h"

@interface ContactsViewController ()<UITableViewDelegate,UITableViewDataSource,UISearchDisplayDelegate,UISearchBarDelegate>
{
    NSMutableArray *contactArray;
    NSMutableDictionary *contactDict;
    NSMutableArray *keyArray;
    NSMutableArray *searchResultArray;
}

@property (weak, nonatomic) IBOutlet UITableView *contactTableView;


@end

@implementation ContactsViewController

@synthesize contactTableView;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    contactTableView.tableHeaderView = self.searchDisplayController.searchBar;
    
    [self.navigationItem setTitleString:@"联系人"];
    [self.navigationItem setLeftBarButtonItem:[UIImage imageNamed:@"back"]
                                imageSelected:[UIImage imageNamed:@"backSelected"]
                                        title:nil
                                        inset:UIEdgeInsetsMake(0,-50, 0, 0)
                                       target:self
                                     selector:@selector(back:)];
    
    contactArray = [[NSMutableArray alloc]init];
    contactDict = [[NSMutableDictionary alloc]init];
    keyArray = [[NSMutableArray alloc]init];
    searchResultArray = [[NSMutableArray alloc]init];
    
    if ([contactTableView respondsToSelector:@selector(sectionIndexBackgroundColor)])
    {
        [contactTableView setSectionIndexBackgroundColor:[UIColor clearColor]];
    }
    contactTableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    [self loadFromDataBase];
}

#pragma mark - 数据处理
-(void)loadFromNetwok
{
    [[NetworkEngine sharedInstance] getFriends:^(int event, id object)
    {
        if(event == 0)
        {
            [self loadFromDataBase];
        }
        else if (event == 1)
        {
             NSMutableArray* array = object;
             if(array != nil && [array count]>0)
             {
                 [self setData:array];
                 [contactTableView reloadData];
             }
            else
            {
                
            }
        }
    }];
}
-(void)loadFromDataBase
{
//    NSArray* array = [[UserDataBaseManager sharedInstance] queryWithClass:[UserInfo class]
//                                                              tableName:MyFriendsTable
//                                                              condition:[NSString stringWithFormat:@" where DBUid='%@'",[UserInfo myselfInstance].userId]];
    UserInfo *user1 = [[UserInfo alloc] init];
    user1.name = @"杨建峰";
    user1.job = @"SD卡发生了房间来上课";
    user1.company = @"欧威vjdfjksd";
    
    UserInfo *user2 = [[UserInfo alloc] init];
    user2.name = @"朱兰";
    user2.job = @"双方家里说";
    user2.company = @"sljlf";
    
    UserInfo *user3 = [[UserInfo alloc] init];
    user3.name = @"诸葛亮";
    user3.job = @"双方家里说";
    user3.company = @"sljlf";
    
    UserInfo *user4 = [[UserInfo alloc] init];
    user4.name = @"阳正天";
    user4.job = @"双方家里说";
    user4.company = @"sljlf";
    
    UserInfo *user5 = [[UserInfo alloc] init];
    user5.name = @"伍术";
    user5.job = @"双方家里说";
    user5.company = @"sljlf";
    
    UserInfo *user6 = [[UserInfo alloc] init];
    user6.name = @"俊丽";
    user6.job = @"双方家里说";
    user6.company = @"sljlf";
    
    UserInfo *user7 = [[UserInfo alloc] init];
    user7.name = @"刘打分";
    user7.job = @"双方家里说";
    user7.company = @"sljlf";
    
    UserInfo *user8 = [[UserInfo alloc] init];
    user8.name = @"日月光";
    user8.job = @"双方家里说";
    user8.company = @"sljlf";
    
    NSMutableArray *array = [NSMutableArray arrayWithObjects:user1,user4,user2,user3,user5,user6,user7,user8, nil];
    
    
    

    
//    if(array != nil && [array count]>0)
//    {
        [self setData:(NSMutableArray*)array];
        [contactTableView reloadData];
//    }
//    else
//    {
//        
//    }
//    [self loadFromNetwok];
}
-(void)setData:(NSMutableArray*)array
{
    contactArray = array;
    [contactDict removeAllObjects];
    for (int i=0; i<ALPHALEN; i++)
    {
        char key = [ALPHA characterAtIndex:(i+1)];
        NSMutableArray* dataArray = [[NSMutableArray alloc] init];
        [contactDict setObject:dataArray forKey:[NSString stringWithFormat:@"%c",key]];
    }
    for(UserInfo* userInfo in contactArray)
    {
        char c = [ChineseToPinyin sortSectionTitle:userInfo.name];
        NSString* key = [NSString stringWithFormat:@"%c", c];
        NSMutableArray* array = [contactDict objectForKey:key];
        [array addObject:userInfo];
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - NavigationBarAction
-(void)back:(id)sender
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - UITableViewDelegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if(tableView == contactTableView)
    {
        [keyArray removeAllObjects];
        for (int i = 0; i < ALPHALEN; i++)
        {
            char key = [ALPHA characterAtIndex:(i+1)];
            NSMutableArray* array = [contactDict objectForKey:[NSString stringWithFormat:@"%c",key]];
            if([array count] > 0)
            {
                [keyArray addObject:[NSString stringWithFormat:@"%c",key]];
            }
        }
        return [keyArray count];
    }
    else
    {
        return 1;
    }
    
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if(tableView == contactTableView)
    {
        NSString* key = [keyArray objectAtIndex:section];
        NSArray* arr = [contactDict objectForKey:key];
        if(arr != nil && arr.count > 0)
        {
            return [arr count];
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return [searchResultArray count];
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(tableView == contactTableView)
    {
        static NSString *normalCell = @"normal";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:normalCell];
        if (cell == nil)
        {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:normalCell];
        }
        NSString* keyChar = [keyArray objectAtIndex:indexPath.section];
        NSArray* arr = [contactDict objectForKey:keyChar];
        if(arr != nil && arr.count > 0)
        {
            UserInfo* userInfo = [arr objectAtIndex:indexPath.row];
            [self customNormalCell:cell withUserInfo:userInfo];
        }
        return cell;
        
    }
    else if (tableView == self.searchDisplayController.searchResultsTableView)
    {
        static NSString *cellId = @"cellId";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
        if (cell == nil)
        {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
        }
        UserInfo* userInfo = [searchResultArray objectAtIndex:indexPath.row];
        [self customNormalCell:cell withUserInfo:userInfo];
        return cell;
    }
    return nil;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 20)];
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(10, 0, 320, 20)];
    label.text = [keyArray objectAtIndex:section];
    label.font = [UIFont boldSystemFontOfSize:14];
    [view addSubview:label];
    return view;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 70;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (tableView == contactTableView)
    {
        return 20;
    }
    else
    {
        return 0;
    }
}

- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView
{
    if (tableView == contactTableView)
    {
        return keyArray;
    }
    else
    {
        return nil;
    }
    
}

-(NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index
{
    if (title == UITableViewIndexSearch)
    {
        [tableView scrollRectToVisible:CGRectMake(0, 0, 320, 44) animated:YES];
        return -1;
    }
    else
    {
        NSIndexPath *selectIndexPath = [NSIndexPath indexPathForRow:0 inSection:index];
        [tableView scrollToRowAtIndexPath:selectIndexPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
        return index;
    }
    
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if(tableView == contactTableView)
    {
        
        NSString* keyChar = [keyArray objectAtIndex:indexPath.section];
        NSArray* array = [contactDict objectForKey:keyChar];
        if(array != nil && array.count > 0)
        {
            UserInfo* userInfo = [array objectAtIndex:indexPath.row];
            if(userInfo != nil)
            {
                self.hidesBottomBarWhenPushed = YES;
                [[LogicManager sharedInstance] gotoProfile:self userId:userInfo.userId];
            }
        }
    }
    else if(tableView == self.searchDisplayController.searchResultsTableView)
    {
        UserInfo* userInfo = [searchResultArray objectAtIndex:indexPath.row];
        if(userInfo != nil)
        {
            self.hidesBottomBarWhenPushed = YES;
            [[LogicManager sharedInstance] gotoProfile:self userId:userInfo.userId];
        }
    }
    
}

-(void)customNormalCell:(UITableViewCell*)cell withUserInfo:(UserInfo*)userInfo
{
    EGOImageView* image = (EGOImageView*)[cell.contentView viewWithTag:10];
    if(image == nil)
    {
        image = [[EGOImageView alloc]initWithFrame:CGRectMake(10, 10, 50, 50)];
        image.tag = 10;
        image.placeholderImage = [UIImage imageNamed:@"defaultHead"];
        [cell.contentView addSubview:image];
    }
    
    UILabel* name = (UILabel*)[cell.contentView viewWithTag:20];
    if(name == nil)
    {
        name = [[UILabel alloc]initWithFrame:CGRectMake(CGRectGetMaxX(image.frame)+10, CGRectGetMinY(image.frame), cell.contentView.frame.size.width-40, 20)];
        name.backgroundColor = [UIColor clearColor];
        name.font = getFontWith(NO, 15);
        name.tag = 20;
        [cell.contentView addSubview:name];
    }
    
    UILabel *jobLabel = (UILabel *)[cell.contentView viewWithTag:30];
    if (jobLabel == nil)
    {
        jobLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMaxX(image.frame)+10, CGRectGetMaxY(name.frame), cell.contentView.frame.size.width-40, 15)];
        jobLabel.tag = 30;
        jobLabel.font = getFontWith(NO, 12);
        jobLabel.textColor =  colorWithHex(0xAAAAAA);
        [cell.contentView addSubview:jobLabel];
    }
    
    UILabel *companyLabel = (UILabel *)[cell.contentView viewWithTag:40];
    if (companyLabel == nil)
    {
        companyLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMaxX(image.frame)+10, CGRectGetMaxY(jobLabel.frame)+2, cell.contentView.frame.size.width-40, 15)];
        companyLabel.tag = 40;
        companyLabel.font = getFontWith(NO, 12);
        companyLabel.textColor =  colorWithHex(0xAAAAAA);
        [cell.contentView addSubview:companyLabel];
    }
    
    if(userInfo != nil)
    {
        [name setText:userInfo.name];
        [image setImageURL:[NSURL URLWithString:userInfo.avatar]];
        jobLabel.text = userInfo.job;
        companyLabel.text = userInfo.company;
    }
    else
    {
        image.backgroundColor = [UIColor redColor];
        name.text = @"欧阳你妹";
        jobLabel.text = @"你妹妹工作";
        companyLabel.text = @"你妹妹.com.baidu.cn";
    }
}

#pragma --mark UISearchDisplayDelegate
-(void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    if(searchText != nil && [searchText length]>0)
    {
        [searchResultArray removeAllObjects];
        NSString* keyPinyin = [ChineseToPinyin pinyinFromChiniseString:searchText];
        for (UserInfo* userInfo in contactArray)
        {
            BOOL exist = NO;
            NSString* pinyin = [ChineseToPinyin pinyinFromChiniseString:userInfo.name];
            if ([pinyin rangeOfString:keyPinyin].length > 0)
            {
                exist = YES;
            }
            else
            {
                for(int i=0;i<[keyPinyin length];i++)
                {
                    NSString* key = [NSString stringWithFormat:@"%c",[keyPinyin characterAtIndex:i]];
                    if ([pinyin rangeOfString:key].length > 0)
                    {
                        exist = YES;
                        break;
                    }
                }
            }
            if(exist)
            {
                [searchResultArray addObject:userInfo];
            }
        }
        [contactTableView reloadData];
    }
    else
    {
        [contactTableView reloadData];
    }
}
@end
