//
//  CardHolderViewController.m
//  WeLinked4
//
//  Created by jonas on 5/14/14.
//  Copyright (c) 2014 jonas. All rights reserved.
//

#import "CardHolderViewController.h"
#import "Card.h"
#import "UserInfo.h"
#import "NetworkEngine.h"
#import "DataBaseManager.h"
#import "ChineseToPinyin.h"

@interface CardHolderViewController ()<UITableViewDataSource,UITableViewDelegate,UISearchDisplayDelegate,UISearchBarDelegate>
{
    NSMutableArray *cardsArray;
    NSMutableDictionary *cardsDict;
    
    NSMutableArray *keyArray;
    NSMutableArray *searchResultArray;
    
}

@property (weak, nonatomic) IBOutlet UITableView *cardTableView;

@end

@implementation CardHolderViewController

@synthesize cardTableView;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        self.tabBarItem.image = [UIImage imageNamed:@"tab"];
        self.tabBarItem.selectedImage = [UIImage imageNamed:@"tabSelected"];
        self.tabBarItem.title = @"名片夹";
        NSMutableDictionary *textAttributes = [NSMutableDictionary dictionary];
        [textAttributes setObject:[UIColor whiteColor] forKey:UITextAttributeTextColor];
        [self.tabBarItem setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:colorWithHex(NAVBARCOLOR),
                                                 UITextAttributeTextColor, nil] forState:UIControlStateSelected];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    cardTableView.tableHeaderView = self.searchDisplayController.searchBar;

    [self.navigationItem setTitleString:@"名片夹"];
    [self.navigationItem setRightBarButtonItem:[UIImage imageNamed:@"back"] imageSelected:[UIImage imageNamed:@"backSelected"] title:nil inset:UIEdgeInsetsMake(0, 0, 0, -60) target:self selector:@selector(addCardByUser)];
    
    cardsArray = [[NSMutableArray alloc] init];
    cardsDict = [[NSMutableDictionary alloc] init];
    keyArray = [[NSMutableArray alloc] init];
    searchResultArray = [[NSMutableArray alloc] init];
    
    if ([cardTableView respondsToSelector:@selector(sectionIndexBackgroundColor)])
    {
        cardTableView.sectionIndexBackgroundColor = [UIColor clearColor];
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - 数据处理
-(void)loadDateFromNetWork
{
    [[NetworkEngine sharedInstance] getUserSaveCards:^(int event, id object) {
        if (0 == event)
        {
            [self loadDatafromDB];
        }
        else if (1 == event)
        {
            NSMutableArray *array = (NSMutableArray *)object;
            if (array != nil && [array count] > 0)
            {
                [self setData:array];
                [cardTableView reloadData];
            }
            else
            {
                
            }
        }
    }];
}

-(void)loadDatafromDB
{
    NSArray *array = [[UserDataBaseManager sharedInstance] queryWithClass:nil tableName:[NSStringFromClass([Card class]) uppercaseString] condition:[NSString stringWithFormat:@" where DBUid='%@'",[UserInfo myselfInstance].userId]];
    if (array != nil && array.count > 0)
    {
        [self setData:(NSMutableArray *)array];
        [cardTableView reloadData];
    }
    else
    {
        
    }
    [self loadDateFromNetWork];
}

-(void)setData:(NSMutableArray *)array
{
    cardsArray = array;
    [cardsDict removeAllObjects];
    for (int i = 0; i < ALPHALEN; i++)
    {
        char key = [ALPHA characterAtIndex:i];
        NSMutableArray *tempArray = [[NSMutableArray alloc] init];
        [cardsDict setObject:tempArray forKey:[NSString stringWithFormat:@"%c",key]];
    }
    for (Card *card in cardsArray)
    {
        char chr = [ChineseToPinyin sortSectionTitle:card.name];
        NSString *namekey = [NSString stringWithFormat:@"%c",chr];
        NSMutableArray *targetArray = [cardsDict objectForKey:namekey];
        [targetArray addObject:card];
    }
}

#pragma mark - UINaigationItem-RightBarButton
-(void)addCardByUser
{
    NSLog(@"addCardByUser");
}

#pragma mark - UITableViewDelegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    if (tableView == cardTableView)
    {
        [keyArray removeAllObjects];
        for (int i = 0; i < ALPHALEN; i++)
        {
            char key = [ALPHA characterAtIndex:i+1];
            NSMutableArray *array = [cardsDict objectForKey:[NSString stringWithFormat:@"%c",key]];
            if (array.count > 0)
            {
                [keyArray addObject:[NSString stringWithFormat:@"%c",key]];
            }
        }
        return keyArray.count;
    }
    else
    {
        return 1;
    }
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (tableView == cardTableView)
    {
        NSString *key = [keyArray objectAtIndex:section];
        NSArray *array = [cardsDict objectForKey:key];
        if (array != nil)
        {
            return array.count + 1;
        }
        else
        {
            return 0;
        }
    }
    else
    {
        return searchResultArray.count;
    }
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellId = @"cellId";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
    }
    
    if (indexPath.row == 0)
    {
        NSString* keyChar = [keyArray objectAtIndex:indexPath.section];
        [self customHeaderCell:cell withString:keyChar];
    }
    else
    {
        NSMutableArray *arr = [cardsDict objectForKey:[keyArray objectAtIndex:indexPath.section]];
        Card *card = [arr objectAtIndex:indexPath.row-1];
        [self customNormalCell:cell withCard:card];
    }
    return cell;
}

-(NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView
{
    NSMutableArray *array = [NSMutableArray arrayWithObject:UITableViewIndexSearch];
    for (int i = 1; i<=27; i++)
    {
        [array addObject:[[ALPHA substringFromIndex:i] substringToIndex:1]];
    }
    return array;
}

-(NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index
{
    if (title == UITableViewIndexSearch)
    {
        [tableView scrollRectToVisible:CGRectMake(0, 0, 320, 44) animated:YES];
        return -1;
    }
    return [ALPHA rangeOfString:title].location-2;
}

-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    return @"ok";
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (tableView == self.cardTableView)
    {
        
    }
    else if (tableView == self.searchDisplayController.searchResultsTableView)
    {
        
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0)
    {
        return 20;
    }
    else
    {
        return 60;
    }
    
}

-(void)customNormalCell:(UITableViewCell *)cell withCard:(Card *)card
{
    EGOImageView *image = (EGOImageView *)[cell.contentView viewWithTag:10];
    if (image == nil)
    {
        image = [[EGOImageView alloc] initWithFrame:CGRectMake(10, 10, 100, 60)];
        image.tag = 10;
        image.placeholderImage = [UIImage imageNamed:@"egoplaceholderimage.png"];
        [cell.contentView addSubview:image];
    }
    
    UILabel *nameLabel = (UILabel *)[cell.contentView viewWithTag:20];
    if (nameLabel == nil)
    {
        nameLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMaxX(image.frame)+10, CGRectGetMinY(image.frame), 100, 20)];
        nameLabel.tag = 20;
        [cell.contentView addSubview:nameLabel];
    }
    
    UILabel *jobPositionLabel = (UILabel *)[cell.contentView viewWithTag:30];
    if (jobPositionLabel == nil)
    {
        jobPositionLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMinX(nameLabel.frame), CGRectGetMaxY(nameLabel.frame)+5, 200, 10)];
        jobPositionLabel.tag = 30;
        [cell.contentView addSubview:jobPositionLabel];
    }
    
    UILabel *companyLabel = (UILabel *)[cell.contentView viewWithTag:40];
    if (companyLabel == nil)
    {
        companyLabel = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMinX(jobPositionLabel.frame), CGRectGetMaxY(jobPositionLabel.frame)+5, 200, 10)];
        companyLabel.tag = 40;
        [cell.contentView addSubview:companyLabel];
    }
    
    if (card != nil)
    {
        image.imageURL = [NSURL URLWithString:card.avatar];
        nameLabel.text = card.name;
        [nameLabel sizeToFit];
        jobPositionLabel.text = card.job;
        [jobPositionLabel sizeToFit];
        companyLabel.text = card.company;
        [companyLabel sizeToFit];
    }
}

-(void)customHeaderCell:(UITableViewCell *)cell withString:(NSString *)headerString
{
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    UIView* view = [[UIView alloc] init];
    UILabel* headerLabel = [[UILabel alloc] init];
    
    view.frame = CGRectMake(0, 0, cell.contentView.frame.size.width, 20);
    view.backgroundColor = [UIColor colorWithRed:0.925 green:0.925 blue:0.925 alpha:1.0];
    
    headerLabel.backgroundColor = [UIColor clearColor];
    [headerLabel setFont:[UIFont systemFontOfSize:13]];
    headerLabel.tag = 200;
    headerLabel.textColor = [UIColor grayColor];
    
    headerLabel.frame = CGRectMake(15, 2, 20, 15);
    
    [view addSubview:headerLabel];
    
    [headerLabel setText:headerString];
    [cell.contentView addSubview:view];
}

#pragma mark - UISearchBarDelegate
-(void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText
{
    if (searchText != nil && searchText.length > 0)
    {
        [searchResultArray removeAllObjects];
        NSString *searchBarString = [ChineseToPinyin pinyinFromChiniseString:searchText];
        BOOL exist = NO;
        for (Card *card in cardsArray)
        {
            NSString *cardNameString = [ChineseToPinyin pinyinFromChiniseString:card.name];
            if ([cardNameString rangeOfString:searchBarString].location !=NSNotFound)
            {
                exist = YES;
            }
            else
            {
                for (int i = 0; i < searchBarString.length; i++)
                {
                    NSString *key = [NSString stringWithFormat:@"%c",[searchBarString characterAtIndex:i]];
                    if ([cardNameString rangeOfString:key].location != NSNotFound)
                    {
                        exist = YES;
                        break;
                    }
                }
            }
            if (exist)
            {
                [searchResultArray addObject:card];
            }
        }
    }
}





@end
