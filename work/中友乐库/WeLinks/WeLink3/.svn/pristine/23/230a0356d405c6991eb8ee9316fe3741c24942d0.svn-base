//
//  ProfileViewController.m
//  WeLinked3
//
//  Created by jonas on 2/21/14.
//  Copyright (c) 2014 WeLinked. All rights reserved.
//

#import "MineProfileViewController.h"
#import "CustomCellView.h"
#import <AssetsLibrary/AssetsLibrary.h>
#import "MessageListViewController.h"
#import "AutoScrollUITextField.h"
#import "WorkListViewController.h"
#import "EducationListViewController.h"
@interface MineProfileViewController ()
{
    UIImagePickerController* imagePicker;
}
@property(nonatomic,strong) ImageEditorViewController *imageEditor;
@property(nonatomic,strong) ALAssetsLibrary *library;
@end

@implementation MineProfileViewController
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        self.tabBarItem.image = [UIImage imageNamed:@"me"];
        self.tabBarItem.selectedImage = [UIImage imageNamed:@"meSelected"];
        self.tabBarItem.title = @"我";
        NSMutableDictionary *textAttributes = [NSMutableDictionary dictionary];
        [textAttributes setObject:[UIColor whiteColor] forKey:UITextAttributeTextColor];
        [self.tabBarItem setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:colorWithHex(NAVBARCOLOR),
                                                 UITextAttributeTextColor, nil] forState:UIControlStateHighlighted];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    HUD = [[MBProgressHUD alloc]initWithView:self.view];
    [self.view addSubview:HUD];
    
    self.wantsFullScreenLayout = YES;
    UIView* head = [[UIView alloc]initWithFrame:CGRectMake(0, 0, headView.frame.size.width, headView.frame.size.height+10)];
    head.backgroundColor = [UIColor clearColor];
    table.tableHeaderView = head;
    headView.frame = CGRectMake(-10, 0, headView.frame.size.width, headView.frame.size.height);
    [table addSubview:headView];
    
    [self.navigationItem setRightBarButtonItemWithWMNavigationItemStyle:WMNavigationItemStyleSetting
                                                                  title:@""
                                                                 target:self
                                                               selector:@selector(gotoSetting:)];
    UITapGestureRecognizer* tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(changeAvatar:)];
    tap.numberOfTapsRequired = 1;
    [headImageView addGestureRecognizer:tap];
    imagePicker = [[UIImagePickerController alloc]init];
    imagePicker.delegate = self;
    imagePicker.wantsFullScreenLayout = NO;
    
    
    tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(editInfo:)];
    tap.numberOfTapsRequired = 1;
    [headView addGestureRecognizer:tap];
    [self.navigationItem setTitleViewWithText:self.tabBarItem.title];
    tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(endEdit:)];
    tap.numberOfTapsRequired = 1;
    tap.delegate = self;
    [table addGestureRecognizer:tap];
    headImageView.placeholderImage = [UIImage imageNamed:@"defaultHead"];
    pikerView = [CustomPickerView sharedInstance];
    [self.navigationController.view addSubview:pikerView];
    
    
    NSArray* arr = [[UserDataBaseManager sharedInstance] queryWithClass:[ProfileInfo class]
                                                              tableName:nil
                                                              condition:[NSString stringWithFormat:@" where DBUid='%@' and userId='%@'",[UserInfo myselfInstance].userId ,[UserInfo myselfInstance].userId]];
    
    if(arr != nil && [arr count]>0)
    {
        profileInfo = [arr objectAtIndex:0];
        [self fillHeadView];
        [table reloadData];
    }
}
-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [self.navigationController.navigationBar hideLoadingIndicator];
}
-(void)showBackButton
{
    [self.navigationItem setLeftBarButtonItemWithWMNavigationItemStyle:WMNavigationItemStyleBack title:@"" target:self selector:@selector(back:)];
}
-(void)back:(id)sender
{
    [self.navigationController popViewControllerAnimated:YES];
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController.navigationBar showLoadingIndicator];
    [[NetworkEngine sharedInstance] getProfileInfo:[UserInfo myselfInstance].userId block:^(int event, id object)
     {
         [self.navigationController.navigationBar hideLoadingIndicator];
         if(event == 0)
         {
             [[LogicManager sharedInstance] showAlertWithTitle:@"" message:@"读取信息失败" actionText:@"确定"];
         }
         else if (event == 1)
         {
             profileInfo = (ProfileInfo*)object;
             [self fillHeadView];
             [table reloadData];
         }
     }];
    //newfriend:新的联系人 friends:联系人列表 msg:消息 feeds:职脉圈
    [[HeartBeatManager sharedInstane] registerInvokeMethod:@"msg" callback:^(int event, id object)
     {
         int newMsg = [(NSNumber*)object intValue];
         int unRead = [[LogicManager sharedInstance] getUnReadMessageCountWithOtherUser:nil];
         [messageTipCountView setTipCount:newMsg+unRead];
     }];
    [[HeartBeatManager sharedInstane] registerInvokeMethod:@"newfriend" callback:^(int event, id object)
     {
         int newfriend = [(NSNumber*)object intValue];
         [contactTipCountView setTipCount:newfriend];
     }];
    [[HeartBeatManager sharedInstane] registerInvokeMethod:@"friends" callback:^(int event, id object){}];
}
- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch
{
    if ([NSStringFromClass([touch.view class]) isEqualToString:@"UITableViewCellContentView"])
    {
        [self.view endEditing:YES];
        return NO;
    }
    return  YES;
}
-(void)endEdit:(UITapGestureRecognizer*)gues
{
    [self.view endEditing:YES];
}
-(void)gotoSetting:(id)sender
{
    SettingViewController* setting = [[SettingViewController alloc]initWithNibName:@"SettingViewController" bundle:nil];
    self.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:setting animated:YES];
    self.hidesBottomBarWhenPushed = NO;
}
-(void)editInfo:(UITapGestureRecognizer*)gues
{
    EditInformationViewController* edit = [[EditInformationViewController alloc]initWithNibName:@"EditInformationViewController" bundle:nil];
    edit.profileInfo = profileInfo;
    self.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:edit animated:YES];
    self.hidesBottomBarWhenPushed = NO;
}
-(void)uploadAvatar:(UIImage*)image
{
    NSData* avatarData = UIImageJPEGRepresentation(image,0.4);
    activeView.hidden = NO;
    [indicator startAnimating];
    [[NetworkEngine sharedInstance] uploadAvatar:avatarData block:^(int event, id object)
    {
        [indicator stopAnimating];
        activeView.hidden = YES;
        if(event == 0)
        {
            [[LogicManager sharedInstance] showAlertWithTitle:@"" message:@"上传失败" actionText:@"确定"];
        }
        else if (event == 1)
        {
            [[LogicManager sharedInstance] showAlertWithTitle:@"" message:@"上传成功" actionText:@"确定"];
//            [headImageView setImageURL:[NSURL URLWithString:object]];
            [headImageView setImage:image];
        }
    }];
}
-(void)changeAvatar:(UITapGestureRecognizer*)gues
{
    camImage.highlighted = YES;
    double delayInSeconds = 0.2;
    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));
    dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
        camImage.highlighted = NO;
    });
    
    [self takePhoto:nil];
}
-(void)save:(id)value key:(NSString*)key
{
    NSDictionary* dic = [NSDictionary dictionaryWithObjectsAndKeys:value==nil?@"":value,key==nil?@"":key, nil];
    NSString *json = [[LogicManager sharedInstance] objectToJsonString:dic];
    [self.navigationController.navigationBar showLoadingIndicator];
    [[NetworkEngine sharedInstance] saveProfileInfo:json block:^(int event, id object)
    {
        [self.navigationController.navigationBar hideLoadingIndicator];
        if(event == 0)
        {
            [[LogicManager sharedInstance] showAlertWithTitle:@"" message:@"修改失败" actionText:@"确定"];
        }
        else if (event == 1)
        {
            if(object != nil)
            {
                profileInfo.userInfo = [UserInfo myselfInstance];
            }
        }
    }];
}
- (void)showCamera
{
    [self initEditController];
    [imagePicker setSourceType:UIImagePickerControllerSourceTypeCamera];
    [imagePicker setCameraDevice:UIImagePickerControllerCameraDeviceFront];
    [imagePicker setCameraFlashMode:UIImagePickerControllerCameraFlashModeAuto];
    imagePicker.showsCameraControls = YES;
    [self presentViewController:imagePicker animated:YES completion:nil];
}

- (void)showPhotoLibrary
{
    [self initEditController];
    [imagePicker setSourceType:UIImagePickerControllerSourceTypePhotoLibrary];
    [self presentViewController:imagePicker animated:YES completion:nil];
}
-(void)clearState
{
    [self.view endEditing:YES];
    [pikerView hide];
}
#pragma mark UITextFieldDelegate
- (BOOL)textFieldShouldClear:(UITextField *)textField
{
    return YES;
}
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    [pikerView hide];
    return YES;
}
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [self clearState];
    return YES;
}
#pragma mark UIActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    switch (buttonIndex)
    {
        case 0:
            [self showCamera];
            break;
        case 1:
            [self showPhotoLibrary];
            break;
        case 2:
            break;
        default:
            break;
    }
}
-(void)takePhoto:(id)sender
{
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
    {
        UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:nil
                                                                 delegate:self
                                                        cancelButtonTitle:@"取消"
                                                   destructiveButtonTitle:nil
                                                        otherButtonTitles:@"拍照",@"相册",nil];
        [actionSheet showInView:self.navigationController.view];
    }
    else
    {
        [self showPhotoLibrary];
    }
}
-(void)initEditController
{
    self.library = [[ALAssetsLibrary alloc] init];
    self.imageEditor = [[ImageEditorViewController alloc] initWithNibName:@"ImageEditorViewController" bundle:nil];
    __weak UIImagePickerController* piker =  imagePicker;
    __weak typeof(self) weakSelf = self;
    self.imageEditor.doneCallback = ^(int event,id object)
    {
        if(event == 1)
        {
            if(object != nil)
            {
                [weakSelf uploadAvatar:object];
            }
        }
        else
        {
            [piker popViewControllerAnimated:YES];
        }
    };
}
#pragma --mark UIImagePickerControllerDelegate
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo
{
    [picker dismissViewControllerAnimated:NO completion:nil];
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UIImage *image =  [info objectForKey:UIImagePickerControllerOriginalImage];
    NSURL *assetURL = [info objectForKey:UIImagePickerControllerReferenceURL];
    
    [self.library assetForURL:assetURL resultBlock:^(ALAsset *asset) {
        UIImage *preview = [UIImage imageWithCGImage:[asset aspectRatioThumbnail]];
        
        self.imageEditor.sourceImage = image;
        self.imageEditor.previewImage = preview;
        [self.imageEditor reset:NO];
        
        [picker dismissViewControllerAnimated:NO completion:nil];
        self.hidesBottomBarWhenPushed = YES;
        [self.navigationController pushViewController:self.imageEditor animated:YES];
        self.hidesBottomBarWhenPushed = NO;
    } failureBlock:^(NSError *error) {
        NSLog(@"Failed to get asset from library");
    }];
}
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:NO completion:nil];
}

-(void)fillHeadView
{
    [headImageView setImageURL:[NSURL URLWithString:profileInfo.userInfo.avatar]];
    NSMutableString* str = [[NSMutableString alloc]init];
    NSString* name = profileInfo.userInfo.name;
    if(name != nil && [name length]>8)
    {
        name = [name substringToIndex:8];
    }
    [str appendFormat:@"<p lineSpacing=5 ><font color='#464646' face='FZLTZHK--GBK1-0' size=16>%@</font></p>",name];
    [str appendFormat:@"\n<p lineSpacing=5 ><font size=12>%@</font></p>",profileInfo.userInfo.company];
    [str appendFormat:@"\n<p lineSpacing=5 ><font size=12>%@</font></p>",profileInfo.userInfo.job];
    [str appendFormat:@"\n<p lineSpacing=5 ><font size=12>职脉号:%@</font></p>",profileInfo.userInfo.userId];
    [descLabel setText:str];
    CityObject* city = [[LogicManager sharedInstance] getPublicObject:profileInfo.userInfo.city type:City];
    [locationLabel setText:city.fullName];
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma --mark TableView
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    switch (section)
    {
        case 0:
            return 3;
            break;
        case 1:
            return 6;
            break;
        case 2:
            return 3;
            break;
        default:
            return 0;
            break;
    }
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0)
    {
        return 55;
    }
    else if (indexPath.section == 1 || indexPath.section == 2)
    {
        if(indexPath.row == 0)
        {
            return 30;
        }
        return 55;
    }
    return 0;
}
- (CustomCellView *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if((indexPath.section == 1 || indexPath.section == 2) && indexPath.row == 0)
    {
        static NSString* Identifier = @"SectionHeader";
        CustomCellView* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
        if(cell == nil)
        {
            cell = [[CustomCellView alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:Identifier];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor = [UIColor clearColor];
            cell.contentView.backgroundColor = [UIColor clearColor];
        }
        if(indexPath.section == 1)
        {
            cell.textLabel.text = @"职业信息";
        }
        else if(indexPath.section == 2)
        {
            cell.textLabel.text = @"教育背景";
        }
        cell.textLabel.font = [UIFont systemFontOfSize:12];
        return cell;
    }
    else
    {
        NSString* Identifier = @"Cell";
        if(indexPath.section == 0)
        {
            if(indexPath.row == 0)
            {
                Identifier = @"MessageCell";
            }
            else if (indexPath.row == 1)
            {
                Identifier = @"ContactCell";
            }
        }
        CustomCellView* cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
        if(cell == nil)
        {
            cell = [[CustomCellView alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:Identifier];
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            
            UIView* cellBackgroundView = [[UIView alloc] initWithFrame:CGRectZero];
            cellBackgroundView.backgroundColor = [UIColor whiteColor];
            cell.backgroundView = cellBackgroundView;
            
            
            cell.backgroundColor = [UIColor whiteColor];
            cell.textLabel.font = getFontWith(YES, 13);
            cell.textLabel.textColor = [UIColor blackColor];
            cell.detailTextLabel.font = getFontWith(NO, 12);
            cell.detailTextLabel.textColor = colorWithHex(0x3287E6);
        }
        cell.textLabel.text = @"";
        cell.imageView.image = nil;
        cell.detailTextLabel.text = @"";
        if(indexPath.section == 0)
        {
            if(indexPath.row == 0)
            {
                cell.textLabel.text = @"消息";
                cell.imageView.image = [UIImage imageNamed:@"messageIcon"];
                messageTipCountView = (TipCountView*)[cell.contentView viewWithTag:200];
                if(messageTipCountView == nil)
                {
                    messageTipCountView = [[TipCountView alloc]init];
                    messageTipCountView.center = CGPointMake(100, 27.5);
                    messageTipCountView.tag = 200;
                    [cell.contentView addSubview:messageTipCountView];
                }
                [self customLine:cell];
            }
            else if(indexPath.row == 1)
            {
                cell.textLabel.text = @"联系人";
                cell.imageView.image = [UIImage imageNamed:@"friendsIcon"];
                contactTipCountView = (TipCountView*)[cell.contentView viewWithTag:200];
                if(contactTipCountView == nil)
                {
                    contactTipCountView = [[TipCountView alloc]init];
                    contactTipCountView.center = CGPointMake(110, 27.5);
                    contactTipCountView.tag = 200;
                    [cell.contentView addSubview:contactTipCountView];
                }
                [self customLine:cell];
            }
            else if(indexPath.row == 2)
            {
                cell.textLabel.text = @"我的发布";
                cell.imageView.image = [UIImage imageNamed:@"publishIcon"];
            }
        }
        else if (indexPath.section == 1)
        {
            if(indexPath.row == 1)
            {
                cell.textLabel.text = @"行业";
                cell.imageView.image = [UIImage imageNamed:@"indusIcon"];
                [self customLine:cell];
                IndustryObject* ind = [[LogicManager sharedInstance] getPublicObject:profileInfo.userInfo.industryId type:Industry];
                if(ind != nil)
                {
                    cell.detailTextLabel.text = ind.name;
                }
                
            }
            else if(indexPath.row == 2)
            {
                cell.textLabel.text = @"级别";
                cell.imageView.image = [UIImage imageNamed:@"degIcon"];
                [self customLine:cell];
                cell.detailTextLabel.text = [[LogicManager sharedInstance] getJobLevel:profileInfo.userInfo.jobLevel];
            }
            else if(indexPath.row == 3)
            {
                cell.textLabel.text = @"工作年限";
                cell.imageView.image = [UIImage imageNamed:@"workyearIcon"];
                [self customLine:cell];
                cell.detailTextLabel.text = [[LogicManager sharedInstance] getJobYear:profileInfo.userInfo.jobYear];
            }
            else if(indexPath.row == 4)
            {
                cell.textLabel.text = @"薪酬";
                cell.imageView.image = [UIImage imageNamed:@"payIcon"];
                [self customLine:cell];
                int salary = profileInfo.userInfo.jobSalary;
                if(salary <= 0)
                {
                    cell.detailTextLabel.text =  @"仅自己可见";
                }
                else
                {
                    cell.detailTextLabel.text = [[LogicManager sharedInstance] getSalary:profileInfo.userInfo.jobSalary];
                }
            }
            else if(indexPath.row == 5)
            {
                cell.textLabel.text = @"工作经历";
                cell.imageView.image = [UIImage imageNamed:@"workexpIcon"];
                if(profileInfo.workArray != nil && [profileInfo.workArray count]>0)
                {
                    WorkInfo* work = [profileInfo.workArray objectAtIndex:0];
                    cell.detailTextLabel.text = [NSString stringWithFormat:@"%@等%d个工作",work.companyName,(int)[profileInfo.workArray count]];
                }
            }
        }
        else if (indexPath.section == 2)
        {
            if(indexPath.row == 1)
            {
                cell.textLabel.text = @"学历";
                cell.imageView.image = [UIImage imageNamed:@"studyIcon"];
                [self customLine:cell];
                cell.detailTextLabel.text = [NSString stringWithFormat:@"%@",[[LogicManager sharedInstance] getEducation:profileInfo.userInfo.education]];
            }
            else if(indexPath.row == 2)
            {
                cell.textLabel.text = @"教育经历";
                cell.imageView.image = [UIImage imageNamed:@"studyexpIcon"];
                if(profileInfo.educationArray != nil && [profileInfo.educationArray count]>0)
                {
                    EducationInfo* education = [profileInfo.educationArray objectAtIndex:0];
                    cell.detailTextLabel.text = [NSString stringWithFormat:@"%@等%d个工作",
                                                 education.school,
                                                 (int)[profileInfo.educationArray count]];
                }
            }
        }
        return cell;
    }
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    self.hidesBottomBarWhenPushed = YES;
    if(indexPath.section == 0 && indexPath.row == 0)
    {
        [self clearState];
        MessageListViewController* list = [[MessageListViewController alloc]init];
        [self.navigationController pushViewController:list animated:YES];
    }
    else if (indexPath.section == 0 && indexPath.row == 1)
    {
        [self clearState];
        ContactsViewController* contact = [[ContactsViewController alloc]initWithNibName:@"ContactsViewController" bundle:nil];
        [self.navigationController pushViewController:contact animated:YES];
    }
    else if (indexPath.section == 1 && indexPath.row == 1)
    {
        //行业选择
        pikerView.pickerType = Industry;
        [pikerView showWithObject:profileInfo.userInfo.industryId block:^(int event, id object)
         {
             if(event == 1)
             {
                 IndustryObject* industry = (IndustryObject*)object;
                 profileInfo.userInfo.industryId = industry.code;
                 [tableView reloadData];
                 [self clearState];
                 [self save:profileInfo.userInfo.industryId key:@"industryId"];
             }
         }];
    }
    else if (indexPath.section == 1 && indexPath.row == 2)
    {
        //级别选择
        pikerView.pickerType = JobLevel;
        [pikerView showWithObject:[NSNumber numberWithInt:profileInfo.userInfo.jobLevel-1] block:^(int event, id object)
         {
             if(event == 1)
             {
                 profileInfo.userInfo.jobLevel = [(NSNumber*)object intValue]+1;
                 [tableView reloadData];
                 [self clearState];
                 [self save:[NSNumber numberWithInt:profileInfo.userInfo.jobLevel] key:@"jobLevel"];
             }
         }];
    }
    else if (indexPath.section == 1 && indexPath.row == 3)
    {
        //级别选择
        pikerView.pickerType = JobYear;
        [pikerView showWithObject:[NSNumber numberWithInt:profileInfo.userInfo.jobYear-1] block:^(int event, id object)
         {
             if(event == 1)
             {
                 profileInfo.userInfo.jobYear = [(NSNumber*)object intValue]+1;
                 [tableView reloadData];
                 [self clearState];
                 [self save:[NSNumber numberWithInt:profileInfo.userInfo.jobYear] key:@"jobYear"];
             }
         }];
    }
    else if (indexPath.section == 1 && indexPath.row == 4)
    {
        //级别选择
        pikerView.pickerType = Salary;
        [pikerView showWithObject:[NSNumber numberWithInt:profileInfo.userInfo.jobSalary-1] block:^(int event, id object)
         {
             if(event == 1)
             {
                 profileInfo.userInfo.jobSalary = [(NSNumber*)object intValue]+1;
                 HUD.customView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"privateTip"]];
                 HUD.mode = MBProgressHUDModeCustomView;
                 [HUD show:YES];
                 [HUD hide:YES afterDelay:1];
                 [tableView reloadData];
                 [self clearState];
                 [self save:[NSNumber numberWithInt:profileInfo.userInfo.jobSalary] key:@"jobSalary"];
             }
         }];
    }
    else if (indexPath.section == 1 && indexPath.row == 5)
    {
        [self clearState];
        WorkListViewController* workList = [[WorkListViewController alloc]initWithNibName:@"WorkListViewController" bundle:nil];
        workList.profileInfo = profileInfo;
        [self.navigationController pushViewController:workList animated:YES];
    }
    else if (indexPath.section == 2 && indexPath.row == 1)
    {
        //级别选择
        pikerView.pickerType = Education;
        [pikerView showWithObject:[NSNumber numberWithInt:profileInfo.userInfo.education-1] block:^(int event, id object)
         {
             if(event == 1)
             {
                 profileInfo.userInfo.education = [(NSNumber*)object intValue]+1;
                 [tableView reloadData];
                 [self clearState];
                 [self save:[NSNumber numberWithInt:profileInfo.userInfo.education] key:@"education"];
             }
         }];
    }
    else if (indexPath.section == 2 && indexPath.row == 2)
    {
        [self clearState];
        EducationListViewController* educationList = [[EducationListViewController alloc]initWithNibName:@"EducationListViewController" bundle:nil];
        educationList.profileInfo = profileInfo;
        [self.navigationController pushViewController:educationList animated:YES];
    }
    else if (indexPath.section == 0 && indexPath.row == 2)
    {
        [self clearState];
        MyPublishViewController* publish = [[MyPublishViewController alloc]initWithNibName:@"MyPublishViewController" bundle:nil];
        [self.navigationController pushViewController:publish animated:YES];
    }
//    [[LogicManager sharedInstance] gotoProfile:self profileInfo:profileInfo];
    
    self.hidesBottomBarWhenPushed = NO;
}
-(UITextField*)customTextFiled:(UITableViewCell*)cell
{
    if(cell == nil || cell.contentView == nil)
    {
        nil;
    }
    AutoScrollUITextField* textField = (AutoScrollUITextField*)[cell.contentView viewWithTag:200];
    if(textField == nil)
    {
        textField = [[AutoScrollUITextField alloc]initWithFrame:CGRectMake(100, 5, cell.frame.size.width-150, 50)];
        textField.table = table;
        textField.tag = 200;
        [cell.contentView addSubview:textField];
        textField.backgroundColor = [UIColor clearColor];
        textField.textAlignment = NSTextAlignmentRight;
        textField.contentVerticalAlignment = UIControlContentVerticalAlignmentCenter;
        textField.font = getFontWith(NO, 12);
        textField.textColor = colorWithHex(0x3287E6);
        if ([textField respondsToSelector:@selector(setAttributedPlaceholder:)])
        {
            textField.attributedPlaceholder = [[NSAttributedString alloc] initWithString:@"待补充"
                                                                              attributes:@{NSForegroundColorAttributeName:colorWithHex(0x3287E6)}];
        }
    }
    return textField;
}
-(void)customLine:(UITableViewCell*)cell
{
    if(cell == nil || cell.contentView == nil)
    {
        return;
    }
    UIView* line = [cell.contentView viewWithTag:2];
    if(line == nil)
    {
        line = [[UIView alloc]initWithFrame:CGRectMake(0, 54.5, cell.frame.size.width, 0.5)];
        line.backgroundColor = colorWithHex(0xCCCCCC);
        line.tag = 2;
        [cell.contentView addSubview:line];
    }
}
#pragma --mark
@end
